"""Global pytest fixtures."""
import pytest
from ldap3 import MOCK_SYNC, Connection, Server
from loguru import logger

# pylint: disable=redefined-outer-name


@pytest.fixture
def ldap_connection() -> Connection:
    """Returns a connection to a fake LDAP server with some entries for testing."""
    connection = Connection(Server("fake_server"), user="cn=user0,ou=users,dc=example,dc=com", password="test", client_strategy=MOCK_SYNC)
    # Users
    connection.strategy.add_entry("cn=user0,ou=users,dc=example,dc=com", {"objectClass": "user", "userPassword": "test"})
    connection.strategy.add_entry("cn=user1,ou=users,dc=example,dc=com", {"objectClass": "user"})
    connection.strategy.add_entry("cn=user2,ou=users,dc=example,dc=com", {"objectClass": "user"})
    connection.strategy.add_entry("cn=user3,ou=users,dc=example,dc=com", {"objectClass": "user"})

    # Groups
    connection.strategy.add_entry("cn=group0,ou=groups,dc=example,dc=com", {"objectClass": "group", "member": []})
    connection.strategy.add_entry("cn=group1,ou=groups,dc=example,dc=com", {
                                  "objectClass": "group", "member": ["cn=user1,ou=users,dc=example,dc=com"]})
    connection.strategy.add_entry("cn=group2,ou=groups,dc=example,dc=com", {
                                  "objectClass": "group", "member": ["cn=user2,ou=users,dc=example,dc=com"]})
    connection.strategy.add_entry("cn=group3,ou=groups,dc=example,dc=com", {"objectClass": "group", "member": [
                                  "cn=user1,ou=users,dc=example,dc=com", "cn=user2,ou=users,dc=example,dc=com"]})
    connection.strategy.add_entry("cn=group4,ou=groups,dc=example,dc=com", {"objectClass": "group", "member": [
                                  "cn=group1,ou=groups,dc=example,dc=com", "cn=user3,ou=users,dc=example,dc=com"]})

    connection.bind()
    logger.debug("mock ldap connection established")
    return connection


@pytest.fixture()
def mock_cleanup():
    """Overwrite connection cleanup."""
    def _mock_cleanup():
        pass
    return _mock_cleanup


@pytest.fixture(autouse=True)
def _mock_ldap_connection(monkeypatch, ldap_connection):
    """Mocks the ldap connection."""
    monkeypatch.setattr("{{package_import_name}}.ldap.connection.connection", ldap_connection)
